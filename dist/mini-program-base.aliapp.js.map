{"version":3,"file":"mini-program-base.aliapp.js","sources":["../src/ComponentBase.aliapp.ts","../node_modules/lodash.isequal/index.js","../src/observer.ts"],"sourcesContent":["import {\n  MiniComponent,\n  method,\n  ComponentBase as MiniComponentBase,\n} from \"mipp-ali\";\n\nexport default class ComponentBase<\n  IData = any,\n> extends MiniComponentBase<IData> {\n  @method\n  aom<IComponent = MiniComponent<any>>(): IComponent {\n    return this as unknown as IComponent;\n  }\n}\n\nexport { MiniComponent };\n","/**\n * Lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    asyncTag = '[object AsyncFunction]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    nullTag = '[object Null]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    proxyTag = '[object Proxy]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    undefinedTag = '[object Undefined]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\n/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\n/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\n/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    Symbol = root.Symbol,\n    Uint8Array = root.Uint8Array,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    splice = arrayProto.splice,\n    symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols,\n    nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n    nativeKeys = overArg(Object.keys, Object);\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView'),\n    Map = getNative(root, 'Map'),\n    Promise = getNative(root, 'Promise'),\n    Set = getNative(root, 'Set'),\n    WeakMap = getNative(root, 'WeakMap'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\n/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n    objIsArr = true;\n    objIsObj = false;\n  }\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(array);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!cacheHas(seen, othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n              return seen.push(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, bitmask, customizer, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= COMPARE_UNORDERED_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(object);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\n/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = isEqual;\n","import isEqual from \"lodash.isequal\";\n\n// 监听Props的变化, for 监听函数\nexport default function observer(key?: string) {\n  return function closureFn(\n    target: any,\n    property: string,\n    descriptor: PropertyDescriptor,\n  ) {\n    const fn = descriptor.value;\n    const subscribeKey = key || property;\n\n    if (!target._propsSubscribeMap) {\n      target._propsSubscribeMap = {};\n      const publisher = target.didUpdate;\n      target.didUpdate = async function newDidUpdate(\n        prevProps: any,\n        prevData: any,\n      ) {\n        try {\n          const subscribeMap = target._propsSubscribeMap || {};\n          Object.keys(subscribeMap)\n            .filter((key) => !isEqual(prevProps?.[key], this?.props?.[key]))\n            .forEach((key) => {\n              subscribeMap?.[key]?.forEach(async (fn: any) => {\n                if (typeof fn === \"function\") {\n                  await fn.call(this, this?.props?.[key]);\n                }\n              });\n            });\n          if (typeof publisher === \"function\") {\n            const result = await publisher.call(this, prevProps, prevData);\n            return result;\n          }\n        } catch (e) {\n          throw e;\n        } finally {\n        }\n      };\n    }\n    if (!target._propsSubscribeMap[subscribeKey]) {\n      target._propsSubscribeMap[subscribeKey] = [];\n    }\n    target._propsSubscribeMap[subscribeKey].push(fn);\n  };\n}\n"],"names":["ComponentBase","_super","__extends","prototype","aom","this","__decorate","method","__metadata","_a","IComponent","Object","MiniComponentBase","commonjsGlobal","globalThis","window","global","self","HASH_UNDEFINED","MAX_SAFE_INTEGER","argsTag","arrayTag","boolTag","dateTag","errorTag","funcTag","mapTag","numberTag","objectTag","promiseTag","regexpTag","setTag","stringTag","symbolTag","weakMapTag","arrayBufferTag","dataViewTag","reIsHostCtor","reIsUint","typedArrayTags","freeGlobal","freeSelf","root","Function","freeExports","exports","nodeType","freeModule","module","moduleExports","freeProcess","process","nodeUtil","binding","e","nodeIsTypedArray","isTypedArray","arraySome","array","predicate","index","length","mapToArray","map","result","Array","size","forEach","value","key","setToArray","set","uid","func","transform","arrayProto","funcProto","objectProto","coreJsData","funcToString","toString","hasOwnProperty","maskSrcKey","exec","keys","IE_PROTO","nativeObjectToString","reIsNative","RegExp","call","replace","Buffer","undefined","Symbol","Uint8Array","propertyIsEnumerable","splice","symToStringTag","toStringTag","nativeGetSymbols","getOwnPropertySymbols","nativeIsBuffer","isBuffer","nativeKeys","arg","DataView","getNative","Map","Promise","Set","WeakMap","nativeCreate","dataViewCtorString","toSource","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","symbolProto","symbolValueOf","valueOf","Hash","entries","clear","entry","ListCache","MapCache","SetCache","values","__data__","add","Stack","data","arrayLikeKeys","inherited","isArr","isArray","isArg","isArguments","isBuff","isType","skipIndexes","n","iteratee","baseTimes","String","isIndex","push","assocIndexOf","eq","baseGetTag","isOwn","tag","unmasked","getRawTag","objectToString","baseIsArguments","isObjectLike","baseIsEqual","other","bitmask","customizer","stack","object","equalFunc","objIsArr","othIsArr","objTag","getTag","othTag","objIsObj","othIsObj","isSameTag","equalArrays","byteLength","byteOffset","buffer","name","message","convert","isPartial","stacked","get","equalByTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","objProps","getAllKeys","objLength","othLength","skipCtor","objValue","othValue","compared","objCtor","constructor","othCtor","equalObjects","baseIsEqualDeep","baseIsNative","isObject","isMasked","isFunction","test","baseKeys","Ctor","proto","arrLength","seen","arrValue","othIndex","has","keysFunc","symbolsFunc","offset","arrayPush","baseGetAllKeys","getSymbols","getMapData","type","getValue","pop","hash","string","pairs","LARGE_ARRAY_SIZE","resIndex","arrayFilter","symbol","ArrayBuffer","resolve","ctorString","arguments","isLength","baseUnary","defineProperty","enumerable","mipp","MiniComponent","PageBase","mippAli","MiniPage","lifetimes","pageLifetime","observer","target","property","descriptor","fn","subscribeKey","_propsSubscribeMap","publisher_1","didUpdate","prevProps","prevData","subscribeMap_1","filter","isEqual","_this","props","__awaiter","_b","sent"],"mappings":"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"}