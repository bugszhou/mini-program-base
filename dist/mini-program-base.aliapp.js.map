{"version":3,"file":"mini-program-base.aliapp.js","sources":["../src/ComponentBase.aliapp.ts","../src/observer.ts","../src/Decorators/Component.aliapp.ts","../src/Decorators/Page.aliapp.ts"],"sourcesContent":["import {\n  MiniComponent,\n  method,\n  ComponentBase as MiniComponentBase,\n} from \"mipp-ali\";\n\nexport default class ComponentBase<\n  IData = any,\n> extends MiniComponentBase<IData> {\n  @method\n  aom<IComponent = MiniComponent<any>>(): IComponent {\n    return this as unknown as IComponent;\n  }\n}\n\nexport { MiniComponent };\n","import get from \"lodash.get\";\nimport isEqual from \"lodash.isequal\";\n\nexport enum OBSERVER_TYPE {\n  DATA = \"data\",\n  PROPS = \"props\",\n  ALL = \"all\",\n  UNKNOWN = \"unknown\",\n}\n\nexport interface ObserverParams {\n  /**\n   * 组件的上下文\n   */\n  context: any;\n  /**\n   * 监听函数的数组\n   */\n  subscribeMap: Record<string, any[]>;\n  /**\n   * 是否强制触发所有监听\n   */\n  forceEmit?: boolean;\n  /**\n   * 上一个Props的状态\n   */\n  prevProps?: any;\n  /**\n   * 上一个Data的状态\n   */\n  prevData?: any;\n}\n\ninterface ObserverItem {\n  value: any;\n  changed: boolean;\n  type: OBSERVER_TYPE;\n}\n\n/**\n * 监听Props的变化, for 监听函数\n * 参考微信文档进行实现：\n * https://developers.weixin.qq.com/miniprogram/dev/framework/custom-component/observer.html\n * 为明确触发的字段来自props还是data，监听函数的入参除了依顺序提供监听字段的当前值，也会依顺序提供监听字段可能的参考来源\n * 具体类型可参考OBSERVER_TYPE\n */\nexport default function observer(key?: string) {\n  return function closureFn(\n    target: any,\n    property: string,\n    descriptor: PropertyDescriptor,\n  ) {\n    const fn = descriptor.value;\n    const subscribeKey = key || property;\n\n    if (!target._propsSubscribeMap) {\n      target._propsSubscribeMap = {};\n      // didMount 监听\n      const mountPublisher = target.didMount;\n      target.didMount = async function newDidMount(...mountArgs: any[]) {\n        try {\n          const subscribeMap = target._propsSubscribeMap || {};\n          checkSubscribe({\n            context: this,\n            subscribeMap,\n            forceEmit: true,\n          });\n          if (typeof mountPublisher === \"function\") {\n            const result = await mountPublisher.call(this, ...mountArgs);\n            return result;\n          }\n        } catch (e) {\n          throw e;\n        }\n      };\n      // didUpdate 监听\n      const updatePublisher = target.didUpdate;\n      target.didUpdate = async function newDidUpdate(\n        prevProps: any,\n        prevData: any,\n      ) {\n        try {\n          const subscribeMap = target._propsSubscribeMap || {};\n          checkSubscribe({\n            context: this,\n            subscribeMap,\n            forceEmit: false,\n            prevProps,\n            prevData,\n          });\n          if (typeof updatePublisher === \"function\") {\n            const result = await updatePublisher.call(\n              this,\n              prevProps,\n              prevData,\n            );\n            return result;\n          }\n        } catch (e) {\n          throw e;\n        }\n      };\n    }\n    if (!target._propsSubscribeMap[subscribeKey]) {\n      target._propsSubscribeMap[subscribeKey] = [];\n    }\n    target._propsSubscribeMap[subscribeKey].push(fn);\n  };\n}\n\nfunction checkSubscribe({\n  context,\n  subscribeMap,\n  forceEmit = false,\n  prevProps = {},\n  prevData = {},\n}: ObserverParams) {\n  Object.keys(subscribeMap).forEach((mapKey) => {\n    const observerKeys = mapKey\n      ?.split(\",\")\n      .map((key) => key?.replace(\".**\", \"\").trim());\n    const fnParams = observerKeys?.map((key): ObserverItem => {\n      if (!key) {\n        return {\n          value: undefined,\n          changed: false,\n          type: OBSERVER_TYPE.UNKNOWN,\n        };\n      }\n      // 通配符触发所有监听\n      if (key === \"**\") {\n        return {\n          value: undefined,\n          changed: true,\n          type: OBSERVER_TYPE.ALL,\n        };\n      }\n\n      const prevPropsValue = get(prevProps, key);\n      const propsValue = get(context?.props, key);\n      const prevDataValue = get(prevData, key);\n      const dataValue = get(context?.data, key);\n\n      // 优先检查props变化\n      if (!isEqual(prevPropsValue, propsValue)) {\n        return {\n          value: propsValue,\n          changed: true,\n          type: OBSERVER_TYPE.PROPS,\n        };\n      }\n\n      // 检查data变化\n      if (!isEqual(prevDataValue, dataValue)) {\n        return {\n          value: dataValue,\n          changed: true,\n          type: OBSERVER_TYPE.DATA,\n        };\n      }\n\n      // 处理不变化时的数据讨论\n      let type = OBSERVER_TYPE.UNKNOWN;\n      let value = undefined;\n      if (typeof propsValue !== \"undefined\") {\n        type = OBSERVER_TYPE.PROPS;\n        value = propsValue;\n      } else if (typeof dataValue !== \"undefined\") {\n        type = OBSERVER_TYPE.DATA;\n        value = dataValue;\n      }\n\n      return {\n        value,\n        changed: false,\n        type,\n      };\n    });\n    if (!forceEmit && fnParams.every((params) => !params?.changed)) return;\n    subscribeMap[mapKey]?.forEach((fn) => {\n      fn?.call?.(\n        context,\n        ...fnParams.map((param) => param?.value),\n        ...fnParams.map((param) => param?.type),\n      );\n    });\n  });\n}\n","import { ComponentBase } from \"mipp-ali\";\n\nexport default function MiniProgramComponent(\n  target: new (...opts: any[]) => any,\n) {\n  const obj = new target();\n  ComponentBase.render(obj);\n}\n","import { PageBase } from \"mipp-ali\";\n\nexport default function MiniProgramPage(target: new (...opts: any[]) => any) {\n  const obj = new target();\n  PageBase.render(obj);\n}\n"],"names":["OBSERVER_TYPE","ComponentBase","_super","__extends","prototype","aom","this","__decorate","method","__metadata","_a","IComponent","Object","MiniComponentBase","checkSubscribe","context","subscribeMap","_b","forceEmit","_c","prevProps","_d","prevData","keys","forEach","mapKey","observerKeys","split","map","key","replace","trim","fnParams","value","undefined","changed","type","UNKNOWN","ALL","prevPropsValue","get","propsValue","props","prevDataValue","dataValue","data","isEqual","PROPS","DATA","every","params","fn","call","apply","__spreadArray","param","defineProperty","exports","enumerable","mipp","MiniComponent","PageBase","mippAli","MiniPage","lifetimes","pageLifetime","MiniProgramComponent","target","obj","render","MiniProgramPage","observer","property","descriptor","subscribeKey","_propsSubscribeMap","mountPublisher_1","didMount","mountArgs","_i","arguments","length","sent","updatePublisher_1","didUpdate","push"],"mappings":"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"}